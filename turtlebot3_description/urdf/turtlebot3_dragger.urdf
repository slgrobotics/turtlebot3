<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/sergei/robot_ws/install/articubot_one/share/articubot_one/description/robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot">
  <!-- See common Gazebo pugins in the world file -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="shadow_grey">
    <color rgba="0.3 0.3 0.3 0.5"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 1 1"/>
  </material>
  <material name="sensor_blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="sensor_yellow">
    <color rgba="0.8 0.8 0.2 1"/>
  </material>
  <material name="body_color">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="port_red">
    <color rgba="1 0.2 0.2 1"/>
  </material>
  <material name="starboard_green">
    <color rgba="0.2 1 0.2 1"/>
  </material>
  <!-- Specify some standard inertial calculations https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->
  <!-- link name="base_footprint"/ -->
  <link name="base_footprint">
    <visual name="footprint_visual">
      <origin xyz="0 0 0.01"/>
      <geometry>
        <box size="0.9 0.4 0.02"/>
      </geometry>
      <material name="shadow_grey"/>
    </visual>
  </link>
  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual name="footprint_visual">
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.03"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.177"/>
  </joint>
  <!-- ********************** ROBOT BODY *********************************  -->
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
    <origin xyz="-0.263 0 -0.01"/>
  </joint>
  <!-- CHASSIS LINK -->
  <link name="chassis_link">
    <visual name="chassis_visual">
      <!-- origin xyz="${chassis_length/2} 0 ${chassis_height/4}"/ -->
      <origin xyz="0 0 0.125"/>
      <geometry>
        <box size="0.9 0.4 0.25"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_top_visual">
      <origin xyz="0.225 0 0.375"/>
      <geometry>
        <box size="0.405 0.38 0.25"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_front_axle_left">
      <origin rpy="-1.5707963267948966 0 0" xyz="0.263 0.2 0"/>
      <geometry>
        <cylinder length="0.2" radius="0.06"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_front_axle_right">
      <origin rpy="1.5707963267948966 0 0" xyz="0.263 -0.2 0"/>
      <geometry>
        <cylinder length="0.2" radius="0.06"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_caster_joint_left">
      <origin rpy="0 0 0" xyz="-0.32 0.20800000000000002 -0.046999999999999986"/>
      <geometry>
        <sphere radius="-0.05169999999999999"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_caster_joint_right">
      <origin rpy="0 0 0" xyz="-0.32 -0.20400000000000001 -0.046999999999999986"/>
      <geometry>
        <sphere radius="-0.05169999999999999"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <box size="0.9 0.4 0.5"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <mass value="0.5"/>
      <inertia ixx="0.017083333333333332" ixy="0.0" ixz="0.0" iyy="0.04416666666666667" iyz="0.0" izz="0.04041666666666667"/>
    </inertial>
  </link>
  <!-- *********************** IMU SETUP *********************************  -->
  <!-- Each sensor must be attached to a link.                              -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="imu_link"/>
    <!-- we place IMU between the wheels -->
    <origin rpy="0 0 0" xyz="0.263 0 0.04"/>
  </joint>
  <!-- gz model -m dragger -s imu_sensor -->
  <gazebo reference="imu_link">
    <sensor name="imu_link" type="imu">
      <always_on>1</always_on>
      <topic>imu</topic>
      <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
      <gz_frame_id>imu_link</gz_frame_id>
      <update_rate>250</update_rate>
      <imu>
        <enable_orientation>0</enable_orientation>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <!-- LEFT WHEEL LINK -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="left_wheel"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0.263 0.29 0"/>
    <axis xyz="0 0 1">
      <limit>
        <lower>-1.79769e+308</lower>
        <upper>1.79769e+308</upper>
      </limit>
    </axis>
  </joint>
  <link name="left_wheel">
    <visual name="left_wheel_visual">
      <geometry>
        <cylinder length="0.09" radius="0.177"/>
      </geometry>
      <material name="port_red"/>
    </visual>
    <visual name="left_wheel_axis_visual">
      <geometry>
        <cylinder length="0.099" radius="0.0177"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <visual name="left_wheel_marker_visual">
      <origin rpy="0 0 0" xyz="0 0.12389999999999998 0"/>
      <geometry>
        <box size="0.0354 0.053099999999999994 0.099"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.09" radius="0.177"/>
      </geometry>
      <max_contacts>1</max_contacts>
      <surface>
        <friction>
          <ode>
            <mu>0.4</mu>
            <mu2>0.6</mu2>
          </ode>
        </friction>
        <bounce/>
        <contact>
          <ode>
            <min_depth>0.005</min_depth>
            <kp>1e8</kp>
          </ode>
        </contact>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.008507249999999997" ixy="0.0" ixz="0.0" iyy="0.008507249999999997" iyz="0.0" izz="0.015664499999999998"/>
    </inertial>
  </link>
  <!-- RIGHT WHEEL LINK -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="right_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0.263 -0.29 0"/>
    <axis xyz="0 0 -1">
      <limit>
        <lower>-1.79769e+308</lower>
        <upper>1.79769e+308</upper>
      </limit>
    </axis>
  </joint>
  <link name="right_wheel">
    <visual name="right_wheel_visual">
      <geometry>
        <cylinder length="0.09" radius="0.177"/>
      </geometry>
      <material name="starboard_green"/>
    </visual>
    <visual name="right_wheel_axis_visual">
      <geometry>
        <cylinder length="0.099" radius="0.0177"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <visual name="right_wheel_marker_visual">
      <origin rpy="0 0 0" xyz="0 -0.12389999999999998 0"/>
      <geometry>
        <box size="0.0354 0.053099999999999994 0.099"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.09" radius="0.177"/>
      </geometry>
      <max_contacts>1</max_contacts>
      <surface>
        <friction>
          <ode>
            <mu>0.4</mu>
            <mu2>0.6</mu2>
          </ode>
        </friction>
        <bounce/>
        <contact>
          <ode>
            <min_depth>0.005</min_depth>
            <kp>1e8</kp>
          </ode>
        </contact>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.008507249999999997" ixy="0.0" ixz="0.0" iyy="0.008507249999999997" iyz="0.0" izz="0.015664499999999998"/>
    </inertial>
  </link>
  <!-- CASTER WHEELS LINKS -->
  <joint name="left_caster_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="left_caster_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="-0.32 0.27 -0.046999999999999986"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="left_caster_wheel">
    <visual name="left_caster_visual">
      <geometry>
        <cylinder length="0.05" radius="0.12"/>
      </geometry>
      <material name="port_red"/>
    </visual>
    <visual name="left_caster_marker_visual">
      <geometry>
        <box size="0.06 0.06 0.05500000000000001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.12"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3"/>
      <inertia ixx="0.0011424999999999999" ixy="0.0" ixz="0.0" iyy="0.0011424999999999999" iyz="0.0" izz="0.00216"/>
    </inertial>
  </link>
  <joint name="right_caster_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="right_caster_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="-0.32 -0.27 -0.046999999999999986"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <link name="right_caster_wheel">
    <visual name="right_caster_visual">
      <geometry>
        <cylinder length="0.05" radius="0.12"/>
      </geometry>
      <material name="starboard_green"/>
    </visual>
    <visual name="right_caster_marker_visual">
      <geometry>
        <box size="0.06 0.06 0.05500000000000001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.12"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3"/>
      <inertia ixx="0.0011424999999999999" ixy="0.0" ixz="0.0" iyy="0.0011424999999999999" iyz="0.0" izz="0.00216"/>
    </inertial>
  </link>
  <ros2_control name="DraggerRobot" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <!-- state_interface name="effort">
                <param name="initial_value">0.0</param>
            </state_interface -->
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <!-- state_interface name="effort">
                <param name="initial_value">0.0</param>
            </state_interface -->
    </joint>
    <!-- we need this for Rviz to reflect rotations of joints published by broad_cont in Gazebo -->
    <joint name="left_caster_wheel_joint">
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="right_caster_wheel_joint">
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
  </ros2_control>
  <gazebo>
    <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <!-- the following are just default parameters anyway. Skip them unless you want to reassign them:
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node> -->
      <parameters>/home/sergei/robot_ws/install/articubot_one/share/articubot_one/config/gaz_ros2_ctl_use_sim.yaml</parameters>
      <parameters>/home/sergei/robot_ws/install/articubot_one/share/articubot_one/config/my_controllers.yaml</parameters>
    </plugin>
  </gazebo>
  <joint name="laser_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="laser_frame"/>
    <origin rpy="0 0 3.1459" xyz="0.275 0 0.57"/>
  </joint>
  <!-- the name "laser_frame" should correspond to /scan topic header->frame_id as defined in *.launch.py -->
  <link name="laser_frame">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.05"/>
      <geometry>
        <cylinder length="0.1" radius="0.03"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="7.583333333333335e-05" ixy="0.0" ixz="0.0" iyy="7.583333333333335e-05" iyz="0.0" izz="0.00012500000000000003"/>
    </inertial>
  </link>
  <!-- gz model -m dragger -s front_laser -->
  <gazebo reference="laser_frame">
    <!-- name must be "laser_frame", specifically for lasers. Must reference an actual link in .xacro -->
    <sensor name="laser_frame" type="gpu_lidar">
      <pose>0 0 0 0 0 0</pose>
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <topic>scan</topic>
      <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
      <gz_frame_id>laser_frame</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.1459</min_angle>
            <max_angle>3.1459</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <visualize>true</visualize>
    </sensor>
  </gazebo>
  <joint name="camera_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="camera_link"/>
    <origin rpy="0 0.18 0" xyz="0.41000000000000003 0 0.55"/>
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.05"/>
      <geometry>
        <cylinder length="0.1" radius="0.002"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="camera_link_optical">
    </link>
  <!-- gz model -m dragger -s rgb_camera -->
  <gazebo reference="camera_link_optical">
    <sensor name="rgb_camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <topic>camera</topic>
      <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
      <!-- see <optical_frame_id> below     <gz_frame_id>camera_link_optical</gz_frame_id> -->
      <update_rate>30</update_rate>
      <enable_metrics>false</enable_metrics>
      <camera name="__default__">
        <pose>0 0 0 0 0 0</pose>
        <horizontal_fov>1.0469999999999999</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
          <format>RGB_INT8</format>
          <anti_aliasing>4</anti_aliasing>
        </image>
        <camera_info_topic>__default__</camera_info_topic>
        <trigger_topic/>
        <triggered>false</triggered>
        <clip>
          <near>0.10000000000000001</near>
          <far>100</far>
        </clip>
        <save enabled="false">
          <path>__default__</path>
        </save>
        <visibility_mask>4294967295</visibility_mask>
        <noise>
          <type>none</type>
          <mean>0</mean>
          <stddev>0</stddev>
        </noise>
        <distortion>
          <k1>0</k1>
          <k2>0</k2>
          <k3>0</k3>
          <p1>0</p1>
          <p2>0</p2>
          <center>0.5 0.5</center>
        </distortion>
        <lens>
          <type>stereographic</type>
          <scale_to_hfov>true</scale_to_hfov>
          <cutoff_angle>1.5707963267948966</cutoff_angle>
          <env_texture_size>256</env_texture_size>
        </lens>
        <optical_frame_id>camera_link_optical</optical_frame_id>
      </camera>
    </sensor>
  </gazebo>
  <joint name="gps_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="gps_link"/>
    <origin rpy="0 0 3.1459" xyz="0.05 0 0.65"/>
  </joint>
  <link name="gps_link">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.05"/>
      </geometry>
      <material name="sensor_yellow"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.1"/>
      <geometry>
        <cylinder length="0.2" radius="0.01"/>
      </geometry>
      <material name="sensor_yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- See https://medium.com/@bytesrobotics/a-review-of-the-ros2-urdf-gazebo-sensor-91e947c633d7 -->
  <!-- gz model -m dragger -s gps_sensor -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
      <always_on>true</always_on>
      <topic>navsat</topic>
      <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
      <gz_frame_id>gps_link</gz_frame_id>
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
    </sensor>
  </gazebo>
  <!-- xacro:include filename="face.xacro" / -->
</robot>
